October 12:

Task1:

1. rules for creating variables in python

2. /   //  %  ** differenct between operators  


October 13:

Task1:

create integer try convert to float/bool/string
create float try convert to int/bool/string
create bool try convert to float/int/string
create string try convert to float/bool/int

Task2:

Difference between compiler and interpreter

Task3:

Difference between python 2 and python3

Task4:

Difference between functional programming and oop


October 15:

Task1 :

simple interest p * n * r /100
get p value n value and r value from user
p ===< integer
n ===> float
r ===> float

Output format ===> string format


Task2 :

Area of cone: 1/3 * pi * r ^2 * h

pi = 3.14
get r from user (float)
get height from user (int)

print output in integer format ==> formatted way


Task3:

even / odd
postivie / negative
prime number / composite number
factorial
fibonacci series
armstrong numbe
square/ cube or power
floor div/ ceil divison
palindrome
add /sub / mul/ div
factors or multiples of a number

3 ==> 1,3
25 ===> 1,5,25
30 ==> 1,2,3,5,6,15,30

Task4:

variable ===> "computer_science"

identify forward and reverse index value for below values
i
t
_
n
m

write code for this also


Task5:


"computer_science"

extract: (all ways)

science
computer
_sci
puter
cien

October 18:

Tasks:

value1 = "Information_Technology"

print(value1[-5:5]) 
print(value1[5:-5])
print(value1[5:-5:1])
print(value1[-5:5:1])
print(value1[5:-5:-1])
print(value1[-5:5:-1])
print(value1[5:-5:5])
print(value1[-5:5:-5])
print(value1[5:-5:-5])
print(value1[-5:5:5])
print(value1[-3:3]) 
print(value1[3:-3])
print(value1[3:-3:1])
print(value1[-3:3:1])
print(value1[3:-3:-1])
print(value1[-3:3:-1])
print(value1[3:-3:3])
print(value1[-3:3:-3])
print(value1[3:-3:-3])
print(value1[-3:3:3])

October 19:

Tasks:

string_name: "Welcome_to_python"


print(value1[-5:5]) 
print(value1[5:-5])
print(value1[5:-5:1])
print(value1[-5:5:1])
print(value1[5:-5:-1])
print(value1[-5:5:-1])
print(value1[5:-5:5])
print(value1[-5:5:-5])
print(value1[5:-5:-5])
print(value1[-5:5:5])
print(value1[-3:3]) 
print(value1[3:-3])
print(value1[3:-3:1])
print(value1[-3:3:1])
print(value1[3:-3:-1])
print(value1[-3:3:-1])
print(value1[3:-3:3])
print(value1[-3:3:-3])
print(value1[3:-3:-3])
print(value1[-3:3:3])
print(var[::1])
print(var[::2])
print(var[::3])
print(var[::-1])
print(var[::-2])
print(var[::-3])
print(var[:8:2])
print(var[:8:-2])
print(var[8::2])
print(var[8::-2])
print(var[:-6:2])
print(var[:-6:-2])
print(var[-6::2])
print(var[-6::-2])


October 22

Task1:

#collect one string from user
#Identify middle character of the string

Task2:

a = ["python", "groovy", "hello"]

extract:
ll
vy
on
py
ello

October 25:

Difference between list tuple set dictionary
insertion sort merge sort bubble sort  ===> Tim sort

October 26:

#nested list

a = [1,2,3,4,5,[101,102,103,105,[201,202,203,204,[304,305,305,"python",["groovy"],[20,21],[31,32],[41,42]]]]]

print(a)
print(type(a))

#305
#202
#41
#oovy
#yth
#32
#42
#20
#4
#105


October 28:

Set methods:

isdisjoint 
issuperset
issubset

Dictionary methods:











